@page "/Create"
@page "/Create/{tecnicoId:int}"
@inject TecnicoServices tecnicoService
@inject NavigationManager navigationManager
@inject IJSRuntime jsRuntime
@rendermode InteractiveServer
@inject NotificationService notificationService

<EditForm Model="Tecnico" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="card shadow-lg border-0 rounded" style="background-color: #f8f9fa;">
        <div class="card-header bg-primary text-white" style="text-align: center;">
            <h3> <i class="fas fa-clipboard-list"></i> Registro de Tecnicos</h3>
        </div>

        <div class="card-body">
            @* TecnicoId *@
            <div class="row">
                <div class="col-md-6 mb-3">
                    <label for="TecnicoId" class="form-label">TecnicoId:</label>
                    <div class="input-group">
                        <div style="width: 40%; height: 1em;">
                            <InputNumber @bind-Value="Tecnico.TecnicoId" class="form-control" style="font-size: 0.8em;" aria-describedby="BotonBuscar" />
                        </div>
                    </div>
                </div>
            </div>

            @* Nombres *@
            <div class="mb-3">
                <label for="Nombres" class="form-label">Nombres:</label>
                <InputText @bind-Value="Tecnico.Nombres" class="form-control" />
                <ValidationMessage For="@(() => Tecnico.Nombres)" />
            </div>

            @* SueldoHora *@
            <div class="mb-3">
                <label for="SueldoHora" class="form-label">SueldoHora:</label>
                <InputNumber @bind-Value="Tecnico.SueldoHora" class="form-control" />
                <ValidationMessage For="@(() => Tecnico.SueldoHora)" />
            </div>

        </div>

        <div class="card-footer bg-light d-flex justify-content-center mt-3">
            <div class="btn-group">
                <button type="button" class="btn btn-outline-primary ml-2" @onclick="Nuevo"><span class="bi bi-plus"></span> Nuevo </button>
                <button type="submit" class="btn btn-outline-success ml-2"><span class="bi bi-check-circle-fill"></span> Guardar </button>             
            </div>
        </div>
    </div>
</EditForm>




@code {
    [Parameter]
    public int? tecnicoId { get; set; }

    public Tecnicos Tecnico { get; set; } = new Tecnicos();
    private bool Existe = false;

    protected override async Task OnInitializedAsync()
    {
        if (tecnicoId.HasValue)
        {
            Tecnico.TecnicoId = tecnicoId.Value;
            await Buscar();
        }
    }

    /*
    public async Task Buscar()
    {
    var tecnicoEncontrado = await tecnicoService.Buscar(Tecnico.TecnicoId);

        if (tecnicoEncontrado != null)
        {
        Tecnico = tecnicoEncontrado;
        }
        else
        {
        toastService.ShowError("Registro no encontrado", "Error");
    }
    }
    */



    public async Task Buscar()
    {
        var tecnicoEncontrado = await tecnicoService.Buscar(Tecnico.TecnicoId);

        if (tecnicoEncontrado != null)
        {
            Tecnico = tecnicoEncontrado;
        }
        else
        {
            notificationService.ShowNotification(titulo: "Encontrado", mensaje: "La entrada se ha encontrado con exito", NotificationSeverity.Info);
        }

    }


    public void Nuevo()
    {
        this.Tecnico = new Tecnicos();
    }

    public void Guardar()
    {
        var guardo = tecnicoService.Guardar(this.Tecnico);
        if(guardo != null)
        {
            notificationService.ShowNotification(titulo: "Guardado", mensaje: "Se a guardado correctamente", NotificationSeverity.Success);
        }
        else
        {
            notificationService.ShowNotification(titulo: "Error", mensaje: "Ocurrio un error al guardar", NotificationSeverity.Warning);
        }

    }

    public void Eliminar()
    {
        var eliminado = tecnicoService.Eliminar(Tecnico.TecnicoId);
        if(eliminado != null)
        {
            notificationService.ShowNotification(titulo: "Eliminado", mensaje: "Se a eliminado correctamente", NotificationSeverity.Success);
        }
        else
        {
            notificationService.ShowNotification(titulo: "Error", mensaje: "Ocurrio un error al eliminar", NotificationSeverity.Warning);
        }
        Nuevo();
    }


}