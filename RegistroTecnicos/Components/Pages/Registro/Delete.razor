@page "/Delete"
@page "/Delete/{tecnicoId:int}"
@inject TecnicoServices tecnicoService
@inject NavigationManager navigationManager
@rendermode InteractiveServer
@inject NotificationService notificationService
@inject TipoTecnicosServices tipoTecnicosServices

<PageTitle>Eliminar Tecnico</PageTitle>

@if (tecnico != null)
{
    <div class="container">
        <div class="card shadow-header">     
            <div class="card-header  bg-primary text-white text-center py-2 rounded">
                <h3><strong>Eliminar Tecnico</strong></h3>
            </div>
            <div class="card-header">
                <h3 class="text-danger">¿Estás seguro de que quieres eliminar ese tecnico?</h3>
            </div>    
            
            <div class="container">
                <div class="row">
                    <div class="col-md-6">
                        <div class="card shadow-lg">
                            <div class="card-header">
                                <h3 class="text-center"><strong>Datos del tecnico</strong></h3>
                            </div>
                            <div class="card-body">
                                <div class="border-primary border-2 borde">
                                    <div class="card-body">
                                        <div class="row">
                                            <div class="col-md-8">
                                                <ul class="list-unstyled">
                                                    <li><strong>TecnicoId:</strong> @tecnico.TecnicoId</li>
                                                    <li><strong>Nombres:</strong> @tecnico.Nombres</li>
                                                    <li><strong>Tipo de Técnico:</strong> @GetTipoTecnicoDescripcion(tecnico.TipoTecnicosId)</li>
                                                    <li><strong>SueldoHora:</strong> @tecnico.SueldoHora</li>
                                                </ul>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>            

            <div class="card-footer">
                <button type="button" class="btn btn-outline-danger" @onclick="Eliminar"><i class="bi bi-trash-fill"></i> Eliminar</button>
                <button type="button" class="btn btn-outline-primary" @onclick="Volver"><i class="bi bi-box-arrow-left"></i> Volver</button>
            </div>
        </div>
    </div>
}
else
{
    <p>Tecnico no encontrado.</p>
}



@code {
    [Parameter]
    public int tecnicoId { get; set; }

    public Tecnicos tecnico { get; set; } = new Tecnicos();

    public TipoTecnicos tipoTecnicos { get; set; } = new TipoTecnicos();

    public List<TipoTecnicos> L_TipoTecnicos { get; set; } = new List<TipoTecnicos>();

    protected override async Task OnInitializedAsync()
    {        
        L_TipoTecnicos = await tipoTecnicosServices.ObtenerTipoTecnicos();

        if (tecnicoId != 0)
        {
            tecnico = await tecnicoService.Buscar(tecnicoId);
        }
    }

    public async Task Eliminar()
    {
        if(tecnicoId == 0 || tecnico == null)
        {
            return;
        }

        if (await tecnicoService.Eliminar(tecnicoId))
        {
            Volver();
        }
    }

    private string GetTipoTecnicoDescripcion(int tipoTecnicoId)
    {        
        var tipo = L_TipoTecnicos.FirstOrDefault(t => t.TipoTecnicosId == tipoTecnicoId);
        return tipo?.Descripcion ?? "No disponible";
    }

    public void Volver()
    {
        navigationManager.NavigateTo("/index");
    }

}